// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: balance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from balance.proto</summary>
  public static partial class BalanceReflection {

    #region Descriptor
    /// <summary>File descriptor for balance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BalanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1iYWxhbmNlLnByb3RvEgNhcGkiigEKGkFjY291bnRTdGF0dXNSZXBvcnRS",
            "ZXF1ZXN0EhgKB01zZ1R5cGUYIyABKAlSB21zZ1R5cGUSGAoHQWNjb3VudBgB",
            "IAEoBFIHYWNjb3VudBI4ChZBY2NvdW50U3RhdHVzUmVxdWVzdElkGJHMAiAB",
            "KAlSFmFjY291bnRTdGF0dXNSZXF1ZXN0SWQiqwEKCFBvc2l0aW9uEhoKCEN1",
            "cnJlbmN5GA8gASgJUghjdXJyZW5jeRIUCgVBdmdQeBgGIAEoCVIFYXZnUHgS",
            "HwoKUG9zaXRpb25JZBjSDCABKARSCnBvc2l0aW9uSWQSKwoQUG9zaXRpb25P",
            "cGVuVGltZRiNDiABKANSEHBvc2l0aW9uT3BlblRpbWUSHwoKUmVhbGl6ZWRQ",
            "TBiODiABKAlSCnJlYWxpemVkUEwimgIKB0JhbGFuY2USGAoHQWNjb3VudBgB",
            "IAEoBFIHYWNjb3VudBIaCghDdXJyZW5jeRgPIAEoCVIIY3VycmVuY3kSJwoO",
            "TGFzdFVwZGF0ZVRpbWUYiwYgASgDUg5sYXN0VXBkYXRlVGltZRIdCglBdmFp",
            "bGFibGUYiQ4gASgJUglhdmFpbGFibGUSFwoGT25Ib2xkGIoOIAEoCVIGb25I",
            "b2xkEhkKB1NldHRsZWQYiw4gASgJUgdzZXR0bGVkEhcKBkVxdWl0eRj/DSAB",
            "KAlSBmVxdWl0eRIWCgVCb251cxjZmAMgASgJUgVib251cxIsCglQb3NpdGlv",
            "bnMYjA4gAygLMg0uYXBpLlBvc2l0aW9uUglwb3NpdGlvbnMilgIKGUJhbGFu",
            "Y2VJbmNyZW1lbnRhbFJlZnJlc2gSGAoHTXNnVHlwZRgjIAEoCVIHbXNnVHlw",
            "ZRIYCgdBY2NvdW50GAEgASgEUgdhY2NvdW50EjgKFkFjY291bnRTdGF0dXNS",
            "ZXF1ZXN0SWQYkcwCIAEoCVIWYWNjb3VudFN0YXR1c1JlcXVlc3RJZBInCg5M",
            "YXN0VXBkYXRlVGltZRiLBiABKANSDmxhc3RVcGRhdGVUaW1lEikKCEJhbGFu",
            "Y2VzGIgOIAMoCzIMLmFwaS5CYWxhbmNlUghiYWxhbmNlcxIjCgxSZWplY3RS",
            "ZWFzb24Y/AIgASgJUgxyZWplY3RSZWFzb24SEgoEVGV4dBg6IAEoCVIEdGV4",
            "dCKTAgoWQmFsYW5jZVNuYXBzaG90UmVmcmVzaBIYCgdNc2dUeXBlGCMgASgJ",
            "Ugdtc2dUeXBlEhgKB0FjY291bnQYASABKARSB2FjY291bnQSOAoWQWNjb3Vu",
            "dFN0YXR1c1JlcXVlc3RJZBiRzAIgASgJUhZhY2NvdW50U3RhdHVzUmVxdWVz",
            "dElkEicKDkxhc3RVcGRhdGVUaW1lGIsGIAEoA1IObGFzdFVwZGF0ZVRpbWUS",
            "KQoIQmFsYW5jZXMYiA4gAygLMgwuYXBpLkJhbGFuY2VSCGJhbGFuY2VzEiMK",
            "DFJlamVjdFJlYXNvbhj8AiABKAlSDHJlamVjdFJlYXNvbhISCgRUZXh0GDog",
            "ASgJUgR0ZXh0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AccountStatusReportRequest), global::Api.AccountStatusReportRequest.Parser, new[]{ "MsgType", "Account", "AccountStatusRequestId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Position), global::Api.Position.Parser, new[]{ "Currency", "AvgPx", "PositionId", "PositionOpenTime", "RealizedPL" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Balance), global::Api.Balance.Parser, new[]{ "Account", "Currency", "LastUpdateTime", "Available", "OnHold", "Settled", "Equity", "Bonus", "Positions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.BalanceIncrementalRefresh), global::Api.BalanceIncrementalRefresh.Parser, new[]{ "MsgType", "Account", "AccountStatusRequestId", "LastUpdateTime", "Balances", "RejectReason", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.BalanceSnapshotRefresh), global::Api.BalanceSnapshotRefresh.Parser, new[]{ "MsgType", "Account", "AccountStatusRequestId", "LastUpdateTime", "Balances", "RejectReason", "Text" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountStatusReportRequest : pb::IMessage<AccountStatusReportRequest> {
    private static readonly pb::MessageParser<AccountStatusReportRequest> _parser = new pb::MessageParser<AccountStatusReportRequest>(() => new AccountStatusReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStatusReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.BalanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatusReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatusReportRequest(AccountStatusReportRequest other) : this() {
      msgType_ = other.msgType_;
      account_ = other.account_;
      accountStatusRequestId_ = other.accountStatusRequestId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStatusReportRequest Clone() {
      return new AccountStatusReportRequest(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "AccountStatusRequestId" field.</summary>
    public const int AccountStatusRequestIdFieldNumber = 42513;
    private string accountStatusRequestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountStatusRequestId {
      get { return accountStatusRequestId_; }
      set {
        accountStatusRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStatusReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStatusReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Account != other.Account) return false;
      if (AccountStatusRequestId != other.AccountStatusRequestId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (AccountStatusRequestId.Length != 0) hash ^= AccountStatusRequestId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (AccountStatusRequestId.Length != 0) {
        output.WriteRawTag(138, 225, 20);
        output.WriteString(AccountStatusRequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (AccountStatusRequestId.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(AccountStatusRequestId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStatusReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.AccountStatusRequestId.Length != 0) {
        AccountStatusRequestId = other.AccountStatusRequestId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 340106: {
            AccountStatusRequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.BalanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      currency_ = other.currency_;
      avgPx_ = other.avgPx_;
      positionId_ = other.positionId_;
      positionOpenTime_ = other.positionOpenTime_;
      realizedPL_ = other.realizedPL_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 15;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AvgPx" field.</summary>
    public const int AvgPxFieldNumber = 6;
    private string avgPx_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvgPx {
      get { return avgPx_; }
      set {
        avgPx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1618;
    private ulong positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "PositionOpenTime" field.</summary>
    public const int PositionOpenTimeFieldNumber = 1805;
    private long positionOpenTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PositionOpenTime {
      get { return positionOpenTime_; }
      set {
        positionOpenTime_ = value;
      }
    }

    /// <summary>Field number for the "RealizedPL" field.</summary>
    public const int RealizedPLFieldNumber = 1806;
    private string realizedPL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RealizedPL {
      get { return realizedPL_; }
      set {
        realizedPL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if (AvgPx != other.AvgPx) return false;
      if (PositionId != other.PositionId) return false;
      if (PositionOpenTime != other.PositionOpenTime) return false;
      if (RealizedPL != other.RealizedPL) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (AvgPx.Length != 0) hash ^= AvgPx.GetHashCode();
      if (PositionId != 0UL) hash ^= PositionId.GetHashCode();
      if (PositionOpenTime != 0L) hash ^= PositionOpenTime.GetHashCode();
      if (RealizedPL.Length != 0) hash ^= RealizedPL.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvgPx.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AvgPx);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Currency);
      }
      if (PositionId != 0UL) {
        output.WriteRawTag(144, 101);
        output.WriteUInt64(PositionId);
      }
      if (PositionOpenTime != 0L) {
        output.WriteRawTag(232, 112);
        output.WriteInt64(PositionOpenTime);
      }
      if (RealizedPL.Length != 0) {
        output.WriteRawTag(242, 112);
        output.WriteString(RealizedPL);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (AvgPx.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvgPx);
      }
      if (PositionId != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(PositionId);
      }
      if (PositionOpenTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PositionOpenTime);
      }
      if (RealizedPL.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RealizedPL);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.AvgPx.Length != 0) {
        AvgPx = other.AvgPx;
      }
      if (other.PositionId != 0UL) {
        PositionId = other.PositionId;
      }
      if (other.PositionOpenTime != 0L) {
        PositionOpenTime = other.PositionOpenTime;
      }
      if (other.RealizedPL.Length != 0) {
        RealizedPL = other.RealizedPL;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 50: {
            AvgPx = input.ReadString();
            break;
          }
          case 122: {
            Currency = input.ReadString();
            break;
          }
          case 12944: {
            PositionId = input.ReadUInt64();
            break;
          }
          case 14440: {
            PositionOpenTime = input.ReadInt64();
            break;
          }
          case 14450: {
            RealizedPL = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Balance : pb::IMessage<Balance> {
    private static readonly pb::MessageParser<Balance> _parser = new pb::MessageParser<Balance>(() => new Balance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Balance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.BalanceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance(Balance other) : this() {
      account_ = other.account_;
      currency_ = other.currency_;
      lastUpdateTime_ = other.lastUpdateTime_;
      available_ = other.available_;
      onHold_ = other.onHold_;
      settled_ = other.settled_;
      equity_ = other.equity_;
      bonus_ = other.bonus_;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Balance Clone() {
      return new Balance(this);
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 15;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastUpdateTime" field.</summary>
    public const int LastUpdateTimeFieldNumber = 779;
    private long lastUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "Available" field.</summary>
    public const int AvailableFieldNumber = 1801;
    private string available_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Available {
      get { return available_; }
      set {
        available_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OnHold" field.</summary>
    public const int OnHoldFieldNumber = 1802;
    private string onHold_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OnHold {
      get { return onHold_; }
      set {
        onHold_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Settled" field.</summary>
    public const int SettledFieldNumber = 1803;
    private string settled_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Settled {
      get { return settled_; }
      set {
        settled_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Equity" field.</summary>
    public const int EquityFieldNumber = 1791;
    private string equity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Equity {
      get { return equity_; }
      set {
        equity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Bonus" field.</summary>
    public const int BonusFieldNumber = 52313;
    private string bonus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bonus {
      get { return bonus_; }
      set {
        bonus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Positions" field.</summary>
    public const int PositionsFieldNumber = 1804;
    private static readonly pb::FieldCodec<global::Api.Position> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(14434, global::Api.Position.Parser);
    private readonly pbc::RepeatedField<global::Api.Position> positions_ = new pbc::RepeatedField<global::Api.Position>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Position> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Balance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Balance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Currency != other.Currency) return false;
      if (LastUpdateTime != other.LastUpdateTime) return false;
      if (Available != other.Available) return false;
      if (OnHold != other.OnHold) return false;
      if (Settled != other.Settled) return false;
      if (Equity != other.Equity) return false;
      if (Bonus != other.Bonus) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
      if (Available.Length != 0) hash ^= Available.GetHashCode();
      if (OnHold.Length != 0) hash ^= OnHold.GetHashCode();
      if (Settled.Length != 0) hash ^= Settled.GetHashCode();
      if (Equity.Length != 0) hash ^= Equity.GetHashCode();
      if (Bonus.Length != 0) hash ^= Bonus.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Currency);
      }
      if (LastUpdateTime != 0L) {
        output.WriteRawTag(216, 48);
        output.WriteInt64(LastUpdateTime);
      }
      if (Equity.Length != 0) {
        output.WriteRawTag(250, 111);
        output.WriteString(Equity);
      }
      if (Available.Length != 0) {
        output.WriteRawTag(202, 112);
        output.WriteString(Available);
      }
      if (OnHold.Length != 0) {
        output.WriteRawTag(210, 112);
        output.WriteString(OnHold);
      }
      if (Settled.Length != 0) {
        output.WriteRawTag(218, 112);
        output.WriteString(Settled);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (Bonus.Length != 0) {
        output.WriteRawTag(202, 197, 25);
        output.WriteString(Bonus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (LastUpdateTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
      }
      if (Available.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Available);
      }
      if (OnHold.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnHold);
      }
      if (Settled.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Settled);
      }
      if (Equity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Equity);
      }
      if (Bonus.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(Bonus);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Balance other) {
      if (other == null) {
        return;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.LastUpdateTime != 0L) {
        LastUpdateTime = other.LastUpdateTime;
      }
      if (other.Available.Length != 0) {
        Available = other.Available;
      }
      if (other.OnHold.Length != 0) {
        OnHold = other.OnHold;
      }
      if (other.Settled.Length != 0) {
        Settled = other.Settled;
      }
      if (other.Equity.Length != 0) {
        Equity = other.Equity;
      }
      if (other.Bonus.Length != 0) {
        Bonus = other.Bonus;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 122: {
            Currency = input.ReadString();
            break;
          }
          case 6232: {
            LastUpdateTime = input.ReadInt64();
            break;
          }
          case 14330: {
            Equity = input.ReadString();
            break;
          }
          case 14410: {
            Available = input.ReadString();
            break;
          }
          case 14418: {
            OnHold = input.ReadString();
            break;
          }
          case 14426: {
            Settled = input.ReadString();
            break;
          }
          case 14434: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 418506: {
            Bonus = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalanceIncrementalRefresh : pb::IMessage<BalanceIncrementalRefresh> {
    private static readonly pb::MessageParser<BalanceIncrementalRefresh> _parser = new pb::MessageParser<BalanceIncrementalRefresh>(() => new BalanceIncrementalRefresh());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceIncrementalRefresh> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.BalanceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceIncrementalRefresh() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceIncrementalRefresh(BalanceIncrementalRefresh other) : this() {
      msgType_ = other.msgType_;
      account_ = other.account_;
      accountStatusRequestId_ = other.accountStatusRequestId_;
      lastUpdateTime_ = other.lastUpdateTime_;
      balances_ = other.balances_.Clone();
      rejectReason_ = other.rejectReason_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceIncrementalRefresh Clone() {
      return new BalanceIncrementalRefresh(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "AccountStatusRequestId" field.</summary>
    public const int AccountStatusRequestIdFieldNumber = 42513;
    private string accountStatusRequestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountStatusRequestId {
      get { return accountStatusRequestId_; }
      set {
        accountStatusRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastUpdateTime" field.</summary>
    public const int LastUpdateTimeFieldNumber = 779;
    private long lastUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "Balances" field.</summary>
    public const int BalancesFieldNumber = 1800;
    private static readonly pb::FieldCodec<global::Api.Balance> _repeated_balances_codec
        = pb::FieldCodec.ForMessage(14402, global::Api.Balance.Parser);
    private readonly pbc::RepeatedField<global::Api.Balance> balances_ = new pbc::RepeatedField<global::Api.Balance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Balance> Balances {
      get { return balances_; }
    }

    /// <summary>Field number for the "RejectReason" field.</summary>
    public const int RejectReasonFieldNumber = 380;
    private string rejectReason_ = "";
    /// <summary>
    /// reject fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RejectReason {
      get { return rejectReason_; }
      set {
        rejectReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 58;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceIncrementalRefresh);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceIncrementalRefresh other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Account != other.Account) return false;
      if (AccountStatusRequestId != other.AccountStatusRequestId) return false;
      if (LastUpdateTime != other.LastUpdateTime) return false;
      if(!balances_.Equals(other.balances_)) return false;
      if (RejectReason != other.RejectReason) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (AccountStatusRequestId.Length != 0) hash ^= AccountStatusRequestId.GetHashCode();
      if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
      hash ^= balances_.GetHashCode();
      if (RejectReason.Length != 0) hash ^= RejectReason.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(210, 3);
        output.WriteString(Text);
      }
      if (RejectReason.Length != 0) {
        output.WriteRawTag(226, 23);
        output.WriteString(RejectReason);
      }
      if (LastUpdateTime != 0L) {
        output.WriteRawTag(216, 48);
        output.WriteInt64(LastUpdateTime);
      }
      balances_.WriteTo(output, _repeated_balances_codec);
      if (AccountStatusRequestId.Length != 0) {
        output.WriteRawTag(138, 225, 20);
        output.WriteString(AccountStatusRequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (AccountStatusRequestId.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(AccountStatusRequestId);
      }
      if (LastUpdateTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
      }
      size += balances_.CalculateSize(_repeated_balances_codec);
      if (RejectReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RejectReason);
      }
      if (Text.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceIncrementalRefresh other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.AccountStatusRequestId.Length != 0) {
        AccountStatusRequestId = other.AccountStatusRequestId;
      }
      if (other.LastUpdateTime != 0L) {
        LastUpdateTime = other.LastUpdateTime;
      }
      balances_.Add(other.balances_);
      if (other.RejectReason.Length != 0) {
        RejectReason = other.RejectReason;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 466: {
            Text = input.ReadString();
            break;
          }
          case 3042: {
            RejectReason = input.ReadString();
            break;
          }
          case 6232: {
            LastUpdateTime = input.ReadInt64();
            break;
          }
          case 14402: {
            balances_.AddEntriesFrom(input, _repeated_balances_codec);
            break;
          }
          case 340106: {
            AccountStatusRequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalanceSnapshotRefresh : pb::IMessage<BalanceSnapshotRefresh> {
    private static readonly pb::MessageParser<BalanceSnapshotRefresh> _parser = new pb::MessageParser<BalanceSnapshotRefresh>(() => new BalanceSnapshotRefresh());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceSnapshotRefresh> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.BalanceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceSnapshotRefresh() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceSnapshotRefresh(BalanceSnapshotRefresh other) : this() {
      msgType_ = other.msgType_;
      account_ = other.account_;
      accountStatusRequestId_ = other.accountStatusRequestId_;
      lastUpdateTime_ = other.lastUpdateTime_;
      balances_ = other.balances_.Clone();
      rejectReason_ = other.rejectReason_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceSnapshotRefresh Clone() {
      return new BalanceSnapshotRefresh(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "AccountStatusRequestId" field.</summary>
    public const int AccountStatusRequestIdFieldNumber = 42513;
    private string accountStatusRequestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountStatusRequestId {
      get { return accountStatusRequestId_; }
      set {
        accountStatusRequestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastUpdateTime" field.</summary>
    public const int LastUpdateTimeFieldNumber = 779;
    private long lastUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "Balances" field.</summary>
    public const int BalancesFieldNumber = 1800;
    private static readonly pb::FieldCodec<global::Api.Balance> _repeated_balances_codec
        = pb::FieldCodec.ForMessage(14402, global::Api.Balance.Parser);
    private readonly pbc::RepeatedField<global::Api.Balance> balances_ = new pbc::RepeatedField<global::Api.Balance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Balance> Balances {
      get { return balances_; }
    }

    /// <summary>Field number for the "RejectReason" field.</summary>
    public const int RejectReasonFieldNumber = 380;
    private string rejectReason_ = "";
    /// <summary>
    /// reject fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RejectReason {
      get { return rejectReason_; }
      set {
        rejectReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 58;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceSnapshotRefresh);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceSnapshotRefresh other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Account != other.Account) return false;
      if (AccountStatusRequestId != other.AccountStatusRequestId) return false;
      if (LastUpdateTime != other.LastUpdateTime) return false;
      if(!balances_.Equals(other.balances_)) return false;
      if (RejectReason != other.RejectReason) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (AccountStatusRequestId.Length != 0) hash ^= AccountStatusRequestId.GetHashCode();
      if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
      hash ^= balances_.GetHashCode();
      if (RejectReason.Length != 0) hash ^= RejectReason.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(210, 3);
        output.WriteString(Text);
      }
      if (RejectReason.Length != 0) {
        output.WriteRawTag(226, 23);
        output.WriteString(RejectReason);
      }
      if (LastUpdateTime != 0L) {
        output.WriteRawTag(216, 48);
        output.WriteInt64(LastUpdateTime);
      }
      balances_.WriteTo(output, _repeated_balances_codec);
      if (AccountStatusRequestId.Length != 0) {
        output.WriteRawTag(138, 225, 20);
        output.WriteString(AccountStatusRequestId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (AccountStatusRequestId.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(AccountStatusRequestId);
      }
      if (LastUpdateTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
      }
      size += balances_.CalculateSize(_repeated_balances_codec);
      if (RejectReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RejectReason);
      }
      if (Text.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceSnapshotRefresh other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.AccountStatusRequestId.Length != 0) {
        AccountStatusRequestId = other.AccountStatusRequestId;
      }
      if (other.LastUpdateTime != 0L) {
        LastUpdateTime = other.LastUpdateTime;
      }
      balances_.Add(other.balances_);
      if (other.RejectReason.Length != 0) {
        RejectReason = other.RejectReason;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 466: {
            Text = input.ReadString();
            break;
          }
          case 3042: {
            RejectReason = input.ReadString();
            break;
          }
          case 6232: {
            LastUpdateTime = input.ReadInt64();
            break;
          }
          case 14402: {
            balances_.AddEntriesFrom(input, _repeated_balances_codec);
            break;
          }
          case 340106: {
            AccountStatusRequestId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: positions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from positions.proto</summary>
  public static partial class PositionsReflection {

    #region Descriptor
    /// <summary>File descriptor for positions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9wb3NpdGlvbnMucHJvdG8SA2FwaRoMbWFyZ2luLnByb3RvIoEBCgdQYXlt",
            "ZW50EiIKC1BheW1lbnRUeXBlGJW6AiABKAlSC3BheW1lbnRUeXBlEioKD1Bh",
            "eW1lbnRDdXJyZW5jeRiYugIgASgJUg9wYXltZW50Q3VycmVuY3kSJgoNUGF5",
            "bWVudEFtb3VudBiZugIgASgJUg1wYXltZW50QW1vdW50ImQKDFJlbGF0ZWRU",
            "cmFkZRInCg5SZWxhdGVkVHJhZGVJZBjADiABKAlSDnJlbGF0ZWRUcmFkZUlk",
            "EisKEFJlbGF0ZWRUcmFkZVR5cGUYwQ4gASgJUhByZWxhdGVkVHJhZGVUeXBl",
            "IpQFCg5Qb3NpdGlvblJlcG9ydBIYCgdNc2dUeXBlGCMgASgJUgdtc2dUeXBl",
            "EhgKB0FjY291bnQYASABKARSB2FjY291bnQSHwoKUG9zaXRpb25JZBi6FCAB",
            "KARSCnBvc2l0aW9uSWQSIgoMVHJhbnNhY3RUaW1lGDwgASgDUgx0cmFuc2Fj",
            "dFRpbWUSFgoGU3ltYm9sGDcgASgJUgZzeW1ib2wSKwoQUG9zaXRpb25PcGVu",
            "VGltZRiNDiABKANSEHBvc2l0aW9uT3BlblRpbWUSFAoFQXZnUHgYBiABKAlS",
            "BWF2Z1B4EhYKBlZvbHVtZRg1IAEoCVIGdm9sdW1lEhIKBFNpZGUYNiABKAlS",
            "BHNpZGUSHAoJU2V0dGxEYXRlGEAgASgDUglzZXR0bERhdGUSHwoKU2V0dGxQ",
            "cmljZRjaBSABKAlSCnNldHRsUHJpY2USKQoPUHJpb3JTZXR0bFByaWNlGN4F",
            "IAEoCVIPcHJpb3JTZXR0bFByaWNlEkMKHFByZXZpb3VzQ2xlYXJpbmdCdXNp",
            "bmVzc0RhdGUYvAggASgDUhxwcmV2aW91c0NsZWFyaW5nQnVzaW5lc3NEYXRl",
            "EjMKFENsZWFyaW5nQnVzaW5lc3NEYXRlGMsFIAEoA1IUY2xlYXJpbmdCdXNp",
            "bmVzc0RhdGUSOAoNTWFyZ2luQW1vdW50cxjrDCADKAsyES5hcGkuTWFyZ2lu",
            "QW1vdW50Ug1tYXJnaW5BbW91bnRzEioKCFBheW1lbnRzGJS6AiADKAsyDC5h",
            "cGkuUGF5bWVudFIIcGF5bWVudHMSOAoNUmVsYXRlZFRyYWRlcxi/DiADKAsy",
            "ES5hcGkuUmVsYXRlZFRyYWRlUg1yZWxhdGVkVHJhZGVzIr4CChJNYXNzUG9z",
            "aXRpb25SZXBvcnQSGAoHTXNnVHlwZRgjIAEoCVIHbXNnVHlwZRIbCghQb3NS",
            "ZXFJZBjGBSABKAlSCHBvc1JlcUlkEhgKB0FjY291bnQYASABKARSB2FjY291",
            "bnQSIgoMVHJhbnNhY3RUaW1lGDwgASgDUgx0cmFuc2FjdFRpbWUSOgoNT3Bl",
            "blBvc2l0aW9ucxjXBSADKAsyEy5hcGkuUG9zaXRpb25SZXBvcnRSDW9wZW5Q",
            "b3NpdGlvbnMSPgoPUG9zaXRpb25IaXN0b3J5GNYFIAMoCzITLmFwaS5Qb3Np",
            "dGlvblJlcG9ydFIPcG9zaXRpb25IaXN0b3J5EiMKDFJlamVjdFJlYXNvbhj8",
            "AiABKAlSDHJlamVjdFJlYXNvbhISCgRUZXh0GDogASgJUgR0ZXh0ImMKEFBv",
            "c2l0aW9uc1JlcXVlc3QSGAoHTXNnVHlwZRgjIAEoCVIHbXNnVHlwZRIbCghQ",
            "b3NSZXFJZBjGBSABKAlSCHBvc1JlcUlkEhgKB0FjY291bnQYASABKARSB2Fj",
            "Y291bnQi0wEKGlBvc2l0aW9uTWFpbnRlbmFuY2VSZXF1ZXN0EhgKB01zZ1R5",
            "cGUYIyABKAlSB21zZ1R5cGUSGwoIUG9zUmVxSWQYxgUgASgJUghwb3NSZXFJ",
            "ZBIjCgxQb3NUcmFuc1R5cGUYxQUgASgJUgxwb3NUcmFuc1R5cGUSJwoOUG9z",
            "TWFpbnRBY3Rpb24YyAUgASgJUg5wb3NNYWludEFjdGlvbhIYCgdBY2NvdW50",
            "GAEgASgEUgdhY2NvdW50EhYKBlN5bWJvbBg3IAEoCVIGc3ltYm9sItIBChlQ",
            "b3NpdGlvbk1haW50ZW5hbmNlUmVwb3J0EhgKB01zZ1R5cGUYIyABKAlSB21z",
            "Z1R5cGUSGwoIUG9zUmVxSWQYxgUgASgJUghwb3NSZXFJZBIjCgxQb3NUcmFu",
            "c1R5cGUYxQUgASgJUgxwb3NUcmFuc1R5cGUSJwoOUG9zTWFpbnRBY3Rpb24Y",
            "yAUgASgJUg5wb3NNYWludEFjdGlvbhIYCgdBY2NvdW50GAEgASgEUgdhY2Nv",
            "dW50EhYKBlN5bWJvbBg3IAEoCVIGc3ltYm9sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Api.MarginReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Payment), global::Api.Payment.Parser, new[]{ "PaymentType", "PaymentCurrency", "PaymentAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RelatedTrade), global::Api.RelatedTrade.Parser, new[]{ "RelatedTradeId", "RelatedTradeType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PositionReport), global::Api.PositionReport.Parser, new[]{ "MsgType", "Account", "PositionId", "TransactTime", "Symbol", "PositionOpenTime", "AvgPx", "Volume", "Side", "SettlDate", "SettlPrice", "PriorSettlPrice", "PreviousClearingBusinessDate", "ClearingBusinessDate", "MarginAmounts", "Payments", "RelatedTrades" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.MassPositionReport), global::Api.MassPositionReport.Parser, new[]{ "MsgType", "PosReqId", "Account", "TransactTime", "OpenPositions", "PositionHistory", "RejectReason", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PositionsRequest), global::Api.PositionsRequest.Parser, new[]{ "MsgType", "PosReqId", "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PositionMaintenanceRequest), global::Api.PositionMaintenanceRequest.Parser, new[]{ "MsgType", "PosReqId", "PosTransType", "PosMaintAction", "Account", "Symbol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PositionMaintenanceReport), global::Api.PositionMaintenanceReport.Parser, new[]{ "MsgType", "PosReqId", "PosTransType", "PosMaintAction", "Account", "Symbol" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Payment : pb::IMessage<Payment> {
    private static readonly pb::MessageParser<Payment> _parser = new pb::MessageParser<Payment>(() => new Payment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Payment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment(Payment other) : this() {
      paymentType_ = other.paymentType_;
      paymentCurrency_ = other.paymentCurrency_;
      paymentAmount_ = other.paymentAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Payment Clone() {
      return new Payment(this);
    }

    /// <summary>Field number for the "PaymentType" field.</summary>
    public const int PaymentTypeFieldNumber = 40213;
    private string paymentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentType {
      get { return paymentType_; }
      set {
        paymentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaymentCurrency" field.</summary>
    public const int PaymentCurrencyFieldNumber = 40216;
    private string paymentCurrency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentCurrency {
      get { return paymentCurrency_; }
      set {
        paymentCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaymentAmount" field.</summary>
    public const int PaymentAmountFieldNumber = 40217;
    private string paymentAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentAmount {
      get { return paymentAmount_; }
      set {
        paymentAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Payment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Payment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaymentType != other.PaymentType) return false;
      if (PaymentCurrency != other.PaymentCurrency) return false;
      if (PaymentAmount != other.PaymentAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PaymentType.Length != 0) hash ^= PaymentType.GetHashCode();
      if (PaymentCurrency.Length != 0) hash ^= PaymentCurrency.GetHashCode();
      if (PaymentAmount.Length != 0) hash ^= PaymentAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PaymentType.Length != 0) {
        output.WriteRawTag(170, 209, 19);
        output.WriteString(PaymentType);
      }
      if (PaymentCurrency.Length != 0) {
        output.WriteRawTag(194, 209, 19);
        output.WriteString(PaymentCurrency);
      }
      if (PaymentAmount.Length != 0) {
        output.WriteRawTag(202, 209, 19);
        output.WriteString(PaymentAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PaymentType.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(PaymentType);
      }
      if (PaymentCurrency.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(PaymentCurrency);
      }
      if (PaymentAmount.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(PaymentAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Payment other) {
      if (other == null) {
        return;
      }
      if (other.PaymentType.Length != 0) {
        PaymentType = other.PaymentType;
      }
      if (other.PaymentCurrency.Length != 0) {
        PaymentCurrency = other.PaymentCurrency;
      }
      if (other.PaymentAmount.Length != 0) {
        PaymentAmount = other.PaymentAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 321706: {
            PaymentType = input.ReadString();
            break;
          }
          case 321730: {
            PaymentCurrency = input.ReadString();
            break;
          }
          case 321738: {
            PaymentAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelatedTrade : pb::IMessage<RelatedTrade> {
    private static readonly pb::MessageParser<RelatedTrade> _parser = new pb::MessageParser<RelatedTrade>(() => new RelatedTrade());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedTrade> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedTrade() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedTrade(RelatedTrade other) : this() {
      relatedTradeId_ = other.relatedTradeId_;
      relatedTradeType_ = other.relatedTradeType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedTrade Clone() {
      return new RelatedTrade(this);
    }

    /// <summary>Field number for the "RelatedTradeId" field.</summary>
    public const int RelatedTradeIdFieldNumber = 1856;
    private string relatedTradeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedTradeId {
      get { return relatedTradeId_; }
      set {
        relatedTradeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RelatedTradeType" field.</summary>
    public const int RelatedTradeTypeFieldNumber = 1857;
    private string relatedTradeType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedTradeType {
      get { return relatedTradeType_; }
      set {
        relatedTradeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedTrade);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedTrade other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RelatedTradeId != other.RelatedTradeId) return false;
      if (RelatedTradeType != other.RelatedTradeType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RelatedTradeId.Length != 0) hash ^= RelatedTradeId.GetHashCode();
      if (RelatedTradeType.Length != 0) hash ^= RelatedTradeType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RelatedTradeId.Length != 0) {
        output.WriteRawTag(130, 116);
        output.WriteString(RelatedTradeId);
      }
      if (RelatedTradeType.Length != 0) {
        output.WriteRawTag(138, 116);
        output.WriteString(RelatedTradeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RelatedTradeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RelatedTradeId);
      }
      if (RelatedTradeType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RelatedTradeType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedTrade other) {
      if (other == null) {
        return;
      }
      if (other.RelatedTradeId.Length != 0) {
        RelatedTradeId = other.RelatedTradeId;
      }
      if (other.RelatedTradeType.Length != 0) {
        RelatedTradeType = other.RelatedTradeType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 14850: {
            RelatedTradeId = input.ReadString();
            break;
          }
          case 14858: {
            RelatedTradeType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionReport : pb::IMessage<PositionReport> {
    private static readonly pb::MessageParser<PositionReport> _parser = new pb::MessageParser<PositionReport>(() => new PositionReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReport(PositionReport other) : this() {
      msgType_ = other.msgType_;
      account_ = other.account_;
      positionId_ = other.positionId_;
      transactTime_ = other.transactTime_;
      symbol_ = other.symbol_;
      positionOpenTime_ = other.positionOpenTime_;
      avgPx_ = other.avgPx_;
      volume_ = other.volume_;
      side_ = other.side_;
      settlDate_ = other.settlDate_;
      settlPrice_ = other.settlPrice_;
      priorSettlPrice_ = other.priorSettlPrice_;
      previousClearingBusinessDate_ = other.previousClearingBusinessDate_;
      clearingBusinessDate_ = other.clearingBusinessDate_;
      marginAmounts_ = other.marginAmounts_.Clone();
      payments_ = other.payments_.Clone();
      relatedTrades_ = other.relatedTrades_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionReport Clone() {
      return new PositionReport(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 2618;
    private ulong positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "TransactTime" field.</summary>
    public const int TransactTimeFieldNumber = 60;
    private long transactTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransactTime {
      get { return transactTime_; }
      set {
        transactTime_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 55;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PositionOpenTime" field.</summary>
    public const int PositionOpenTimeFieldNumber = 1805;
    private long positionOpenTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PositionOpenTime {
      get { return positionOpenTime_; }
      set {
        positionOpenTime_ = value;
      }
    }

    /// <summary>Field number for the "AvgPx" field.</summary>
    public const int AvgPxFieldNumber = 6;
    private string avgPx_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvgPx {
      get { return avgPx_; }
      set {
        avgPx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Volume" field.</summary>
    public const int VolumeFieldNumber = 53;
    private string volume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Volume {
      get { return volume_; }
      set {
        volume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Side" field.</summary>
    public const int SideFieldNumber = 54;
    private string side_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Side {
      get { return side_; }
      set {
        side_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SettlDate" field.</summary>
    public const int SettlDateFieldNumber = 64;
    private long settlDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SettlDate {
      get { return settlDate_; }
      set {
        settlDate_ = value;
      }
    }

    /// <summary>Field number for the "SettlPrice" field.</summary>
    public const int SettlPriceFieldNumber = 730;
    private string settlPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SettlPrice {
      get { return settlPrice_; }
      set {
        settlPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriorSettlPrice" field.</summary>
    public const int PriorSettlPriceFieldNumber = 734;
    private string priorSettlPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriorSettlPrice {
      get { return priorSettlPrice_; }
      set {
        priorSettlPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PreviousClearingBusinessDate" field.</summary>
    public const int PreviousClearingBusinessDateFieldNumber = 1084;
    private long previousClearingBusinessDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PreviousClearingBusinessDate {
      get { return previousClearingBusinessDate_; }
      set {
        previousClearingBusinessDate_ = value;
      }
    }

    /// <summary>Field number for the "ClearingBusinessDate" field.</summary>
    public const int ClearingBusinessDateFieldNumber = 715;
    private long clearingBusinessDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClearingBusinessDate {
      get { return clearingBusinessDate_; }
      set {
        clearingBusinessDate_ = value;
      }
    }

    /// <summary>Field number for the "MarginAmounts" field.</summary>
    public const int MarginAmountsFieldNumber = 1643;
    private static readonly pb::FieldCodec<global::Api.MarginAmount> _repeated_marginAmounts_codec
        = pb::FieldCodec.ForMessage(13146, global::Api.MarginAmount.Parser);
    private readonly pbc::RepeatedField<global::Api.MarginAmount> marginAmounts_ = new pbc::RepeatedField<global::Api.MarginAmount>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.MarginAmount> MarginAmounts {
      get { return marginAmounts_; }
    }

    /// <summary>Field number for the "Payments" field.</summary>
    public const int PaymentsFieldNumber = 40212;
    private static readonly pb::FieldCodec<global::Api.Payment> _repeated_payments_codec
        = pb::FieldCodec.ForMessage(321698, global::Api.Payment.Parser);
    private readonly pbc::RepeatedField<global::Api.Payment> payments_ = new pbc::RepeatedField<global::Api.Payment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Payment> Payments {
      get { return payments_; }
    }

    /// <summary>Field number for the "RelatedTrades" field.</summary>
    public const int RelatedTradesFieldNumber = 1855;
    private static readonly pb::FieldCodec<global::Api.RelatedTrade> _repeated_relatedTrades_codec
        = pb::FieldCodec.ForMessage(14842, global::Api.RelatedTrade.Parser);
    private readonly pbc::RepeatedField<global::Api.RelatedTrade> relatedTrades_ = new pbc::RepeatedField<global::Api.RelatedTrade>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RelatedTrade> RelatedTrades {
      get { return relatedTrades_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (Account != other.Account) return false;
      if (PositionId != other.PositionId) return false;
      if (TransactTime != other.TransactTime) return false;
      if (Symbol != other.Symbol) return false;
      if (PositionOpenTime != other.PositionOpenTime) return false;
      if (AvgPx != other.AvgPx) return false;
      if (Volume != other.Volume) return false;
      if (Side != other.Side) return false;
      if (SettlDate != other.SettlDate) return false;
      if (SettlPrice != other.SettlPrice) return false;
      if (PriorSettlPrice != other.PriorSettlPrice) return false;
      if (PreviousClearingBusinessDate != other.PreviousClearingBusinessDate) return false;
      if (ClearingBusinessDate != other.ClearingBusinessDate) return false;
      if(!marginAmounts_.Equals(other.marginAmounts_)) return false;
      if(!payments_.Equals(other.payments_)) return false;
      if(!relatedTrades_.Equals(other.relatedTrades_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (PositionId != 0UL) hash ^= PositionId.GetHashCode();
      if (TransactTime != 0L) hash ^= TransactTime.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (PositionOpenTime != 0L) hash ^= PositionOpenTime.GetHashCode();
      if (AvgPx.Length != 0) hash ^= AvgPx.GetHashCode();
      if (Volume.Length != 0) hash ^= Volume.GetHashCode();
      if (Side.Length != 0) hash ^= Side.GetHashCode();
      if (SettlDate != 0L) hash ^= SettlDate.GetHashCode();
      if (SettlPrice.Length != 0) hash ^= SettlPrice.GetHashCode();
      if (PriorSettlPrice.Length != 0) hash ^= PriorSettlPrice.GetHashCode();
      if (PreviousClearingBusinessDate != 0L) hash ^= PreviousClearingBusinessDate.GetHashCode();
      if (ClearingBusinessDate != 0L) hash ^= ClearingBusinessDate.GetHashCode();
      hash ^= marginAmounts_.GetHashCode();
      hash ^= payments_.GetHashCode();
      hash ^= relatedTrades_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (AvgPx.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AvgPx);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Volume.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(Volume);
      }
      if (Side.Length != 0) {
        output.WriteRawTag(178, 3);
        output.WriteString(Side);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(Symbol);
      }
      if (TransactTime != 0L) {
        output.WriteRawTag(224, 3);
        output.WriteInt64(TransactTime);
      }
      if (SettlDate != 0L) {
        output.WriteRawTag(128, 4);
        output.WriteInt64(SettlDate);
      }
      if (ClearingBusinessDate != 0L) {
        output.WriteRawTag(216, 44);
        output.WriteInt64(ClearingBusinessDate);
      }
      if (SettlPrice.Length != 0) {
        output.WriteRawTag(210, 45);
        output.WriteString(SettlPrice);
      }
      if (PriorSettlPrice.Length != 0) {
        output.WriteRawTag(242, 45);
        output.WriteString(PriorSettlPrice);
      }
      if (PreviousClearingBusinessDate != 0L) {
        output.WriteRawTag(224, 67);
        output.WriteInt64(PreviousClearingBusinessDate);
      }
      marginAmounts_.WriteTo(output, _repeated_marginAmounts_codec);
      if (PositionOpenTime != 0L) {
        output.WriteRawTag(232, 112);
        output.WriteInt64(PositionOpenTime);
      }
      relatedTrades_.WriteTo(output, _repeated_relatedTrades_codec);
      if (PositionId != 0UL) {
        output.WriteRawTag(208, 163, 1);
        output.WriteUInt64(PositionId);
      }
      payments_.WriteTo(output, _repeated_payments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (PositionId != 0UL) {
        size += 3 + pb::CodedOutputStream.ComputeUInt64Size(PositionId);
      }
      if (TransactTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TransactTime);
      }
      if (Symbol.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (PositionOpenTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PositionOpenTime);
      }
      if (AvgPx.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvgPx);
      }
      if (Volume.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Volume);
      }
      if (Side.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Side);
      }
      if (SettlDate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SettlDate);
      }
      if (SettlPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SettlPrice);
      }
      if (PriorSettlPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriorSettlPrice);
      }
      if (PreviousClearingBusinessDate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PreviousClearingBusinessDate);
      }
      if (ClearingBusinessDate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ClearingBusinessDate);
      }
      size += marginAmounts_.CalculateSize(_repeated_marginAmounts_codec);
      size += payments_.CalculateSize(_repeated_payments_codec);
      size += relatedTrades_.CalculateSize(_repeated_relatedTrades_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionReport other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.PositionId != 0UL) {
        PositionId = other.PositionId;
      }
      if (other.TransactTime != 0L) {
        TransactTime = other.TransactTime;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.PositionOpenTime != 0L) {
        PositionOpenTime = other.PositionOpenTime;
      }
      if (other.AvgPx.Length != 0) {
        AvgPx = other.AvgPx;
      }
      if (other.Volume.Length != 0) {
        Volume = other.Volume;
      }
      if (other.Side.Length != 0) {
        Side = other.Side;
      }
      if (other.SettlDate != 0L) {
        SettlDate = other.SettlDate;
      }
      if (other.SettlPrice.Length != 0) {
        SettlPrice = other.SettlPrice;
      }
      if (other.PriorSettlPrice.Length != 0) {
        PriorSettlPrice = other.PriorSettlPrice;
      }
      if (other.PreviousClearingBusinessDate != 0L) {
        PreviousClearingBusinessDate = other.PreviousClearingBusinessDate;
      }
      if (other.ClearingBusinessDate != 0L) {
        ClearingBusinessDate = other.ClearingBusinessDate;
      }
      marginAmounts_.Add(other.marginAmounts_);
      payments_.Add(other.payments_);
      relatedTrades_.Add(other.relatedTrades_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 50: {
            AvgPx = input.ReadString();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 426: {
            Volume = input.ReadString();
            break;
          }
          case 434: {
            Side = input.ReadString();
            break;
          }
          case 442: {
            Symbol = input.ReadString();
            break;
          }
          case 480: {
            TransactTime = input.ReadInt64();
            break;
          }
          case 512: {
            SettlDate = input.ReadInt64();
            break;
          }
          case 5720: {
            ClearingBusinessDate = input.ReadInt64();
            break;
          }
          case 5842: {
            SettlPrice = input.ReadString();
            break;
          }
          case 5874: {
            PriorSettlPrice = input.ReadString();
            break;
          }
          case 8672: {
            PreviousClearingBusinessDate = input.ReadInt64();
            break;
          }
          case 13146: {
            marginAmounts_.AddEntriesFrom(input, _repeated_marginAmounts_codec);
            break;
          }
          case 14440: {
            PositionOpenTime = input.ReadInt64();
            break;
          }
          case 14842: {
            relatedTrades_.AddEntriesFrom(input, _repeated_relatedTrades_codec);
            break;
          }
          case 20944: {
            PositionId = input.ReadUInt64();
            break;
          }
          case 321698: {
            payments_.AddEntriesFrom(input, _repeated_payments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MassPositionReport : pb::IMessage<MassPositionReport> {
    private static readonly pb::MessageParser<MassPositionReport> _parser = new pb::MessageParser<MassPositionReport>(() => new MassPositionReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MassPositionReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MassPositionReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MassPositionReport(MassPositionReport other) : this() {
      msgType_ = other.msgType_;
      posReqId_ = other.posReqId_;
      account_ = other.account_;
      transactTime_ = other.transactTime_;
      openPositions_ = other.openPositions_.Clone();
      positionHistory_ = other.positionHistory_.Clone();
      rejectReason_ = other.rejectReason_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MassPositionReport Clone() {
      return new MassPositionReport(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosReqId" field.</summary>
    public const int PosReqIdFieldNumber = 710;
    private string posReqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosReqId {
      get { return posReqId_; }
      set {
        posReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "TransactTime" field.</summary>
    public const int TransactTimeFieldNumber = 60;
    private long transactTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TransactTime {
      get { return transactTime_; }
      set {
        transactTime_ = value;
      }
    }

    /// <summary>Field number for the "OpenPositions" field.</summary>
    public const int OpenPositionsFieldNumber = 727;
    private static readonly pb::FieldCodec<global::Api.PositionReport> _repeated_openPositions_codec
        = pb::FieldCodec.ForMessage(5818, global::Api.PositionReport.Parser);
    private readonly pbc::RepeatedField<global::Api.PositionReport> openPositions_ = new pbc::RepeatedField<global::Api.PositionReport>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.PositionReport> OpenPositions {
      get { return openPositions_; }
    }

    /// <summary>Field number for the "PositionHistory" field.</summary>
    public const int PositionHistoryFieldNumber = 726;
    private static readonly pb::FieldCodec<global::Api.PositionReport> _repeated_positionHistory_codec
        = pb::FieldCodec.ForMessage(5810, global::Api.PositionReport.Parser);
    private readonly pbc::RepeatedField<global::Api.PositionReport> positionHistory_ = new pbc::RepeatedField<global::Api.PositionReport>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.PositionReport> PositionHistory {
      get { return positionHistory_; }
    }

    /// <summary>Field number for the "RejectReason" field.</summary>
    public const int RejectReasonFieldNumber = 380;
    private string rejectReason_ = "";
    /// <summary>
    /// reject fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RejectReason {
      get { return rejectReason_; }
      set {
        rejectReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 58;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MassPositionReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MassPositionReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PosReqId != other.PosReqId) return false;
      if (Account != other.Account) return false;
      if (TransactTime != other.TransactTime) return false;
      if(!openPositions_.Equals(other.openPositions_)) return false;
      if(!positionHistory_.Equals(other.positionHistory_)) return false;
      if (RejectReason != other.RejectReason) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (PosReqId.Length != 0) hash ^= PosReqId.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (TransactTime != 0L) hash ^= TransactTime.GetHashCode();
      hash ^= openPositions_.GetHashCode();
      hash ^= positionHistory_.GetHashCode();
      if (RejectReason.Length != 0) hash ^= RejectReason.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(210, 3);
        output.WriteString(Text);
      }
      if (TransactTime != 0L) {
        output.WriteRawTag(224, 3);
        output.WriteInt64(TransactTime);
      }
      if (RejectReason.Length != 0) {
        output.WriteRawTag(226, 23);
        output.WriteString(RejectReason);
      }
      if (PosReqId.Length != 0) {
        output.WriteRawTag(178, 44);
        output.WriteString(PosReqId);
      }
      positionHistory_.WriteTo(output, _repeated_positionHistory_codec);
      openPositions_.WriteTo(output, _repeated_openPositions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (PosReqId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosReqId);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (TransactTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TransactTime);
      }
      size += openPositions_.CalculateSize(_repeated_openPositions_codec);
      size += positionHistory_.CalculateSize(_repeated_positionHistory_codec);
      if (RejectReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RejectReason);
      }
      if (Text.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MassPositionReport other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.PosReqId.Length != 0) {
        PosReqId = other.PosReqId;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.TransactTime != 0L) {
        TransactTime = other.TransactTime;
      }
      openPositions_.Add(other.openPositions_);
      positionHistory_.Add(other.positionHistory_);
      if (other.RejectReason.Length != 0) {
        RejectReason = other.RejectReason;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 466: {
            Text = input.ReadString();
            break;
          }
          case 480: {
            TransactTime = input.ReadInt64();
            break;
          }
          case 3042: {
            RejectReason = input.ReadString();
            break;
          }
          case 5682: {
            PosReqId = input.ReadString();
            break;
          }
          case 5810: {
            positionHistory_.AddEntriesFrom(input, _repeated_positionHistory_codec);
            break;
          }
          case 5818: {
            openPositions_.AddEntriesFrom(input, _repeated_openPositions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionsRequest : pb::IMessage<PositionsRequest> {
    private static readonly pb::MessageParser<PositionsRequest> _parser = new pb::MessageParser<PositionsRequest>(() => new PositionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionsRequest(PositionsRequest other) : this() {
      msgType_ = other.msgType_;
      posReqId_ = other.posReqId_;
      account_ = other.account_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionsRequest Clone() {
      return new PositionsRequest(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosReqId" field.</summary>
    public const int PosReqIdFieldNumber = 710;
    private string posReqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosReqId {
      get { return posReqId_; }
      set {
        posReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PosReqId != other.PosReqId) return false;
      if (Account != other.Account) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (PosReqId.Length != 0) hash ^= PosReqId.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (PosReqId.Length != 0) {
        output.WriteRawTag(178, 44);
        output.WriteString(PosReqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (PosReqId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosReqId);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.PosReqId.Length != 0) {
        PosReqId = other.PosReqId;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 5682: {
            PosReqId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionMaintenanceRequest : pb::IMessage<PositionMaintenanceRequest> {
    private static readonly pb::MessageParser<PositionMaintenanceRequest> _parser = new pb::MessageParser<PositionMaintenanceRequest>(() => new PositionMaintenanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionMaintenanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceRequest(PositionMaintenanceRequest other) : this() {
      msgType_ = other.msgType_;
      posReqId_ = other.posReqId_;
      posTransType_ = other.posTransType_;
      posMaintAction_ = other.posMaintAction_;
      account_ = other.account_;
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceRequest Clone() {
      return new PositionMaintenanceRequest(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosReqId" field.</summary>
    public const int PosReqIdFieldNumber = 710;
    private string posReqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosReqId {
      get { return posReqId_; }
      set {
        posReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosTransType" field.</summary>
    public const int PosTransTypeFieldNumber = 709;
    private string posTransType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosTransType {
      get { return posTransType_; }
      set {
        posTransType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosMaintAction" field.</summary>
    public const int PosMaintActionFieldNumber = 712;
    private string posMaintAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosMaintAction {
      get { return posMaintAction_; }
      set {
        posMaintAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 55;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionMaintenanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionMaintenanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PosReqId != other.PosReqId) return false;
      if (PosTransType != other.PosTransType) return false;
      if (PosMaintAction != other.PosMaintAction) return false;
      if (Account != other.Account) return false;
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (PosReqId.Length != 0) hash ^= PosReqId.GetHashCode();
      if (PosTransType.Length != 0) hash ^= PosTransType.GetHashCode();
      if (PosMaintAction.Length != 0) hash ^= PosMaintAction.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(Symbol);
      }
      if (PosTransType.Length != 0) {
        output.WriteRawTag(170, 44);
        output.WriteString(PosTransType);
      }
      if (PosReqId.Length != 0) {
        output.WriteRawTag(178, 44);
        output.WriteString(PosReqId);
      }
      if (PosMaintAction.Length != 0) {
        output.WriteRawTag(194, 44);
        output.WriteString(PosMaintAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (PosReqId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosReqId);
      }
      if (PosTransType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosTransType);
      }
      if (PosMaintAction.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosMaintAction);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (Symbol.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionMaintenanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.PosReqId.Length != 0) {
        PosReqId = other.PosReqId;
      }
      if (other.PosTransType.Length != 0) {
        PosTransType = other.PosTransType;
      }
      if (other.PosMaintAction.Length != 0) {
        PosMaintAction = other.PosMaintAction;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 442: {
            Symbol = input.ReadString();
            break;
          }
          case 5674: {
            PosTransType = input.ReadString();
            break;
          }
          case 5682: {
            PosReqId = input.ReadString();
            break;
          }
          case 5698: {
            PosMaintAction = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionMaintenanceReport : pb::IMessage<PositionMaintenanceReport> {
    private static readonly pb::MessageParser<PositionMaintenanceReport> _parser = new pb::MessageParser<PositionMaintenanceReport>(() => new PositionMaintenanceReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionMaintenanceReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.PositionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceReport(PositionMaintenanceReport other) : this() {
      msgType_ = other.msgType_;
      posReqId_ = other.posReqId_;
      posTransType_ = other.posTransType_;
      posMaintAction_ = other.posMaintAction_;
      account_ = other.account_;
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionMaintenanceReport Clone() {
      return new PositionMaintenanceReport(this);
    }

    /// <summary>Field number for the "MsgType" field.</summary>
    public const int MsgTypeFieldNumber = 35;
    private string msgType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgType {
      get { return msgType_; }
      set {
        msgType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosReqId" field.</summary>
    public const int PosReqIdFieldNumber = 710;
    private string posReqId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosReqId {
      get { return posReqId_; }
      set {
        posReqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosTransType" field.</summary>
    public const int PosTransTypeFieldNumber = 709;
    private string posTransType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosTransType {
      get { return posTransType_; }
      set {
        posTransType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PosMaintAction" field.</summary>
    public const int PosMaintActionFieldNumber = 712;
    private string posMaintAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PosMaintAction {
      get { return posMaintAction_; }
      set {
        posMaintAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 1;
    private ulong account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "Symbol" field.</summary>
    public const int SymbolFieldNumber = 55;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionMaintenanceReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionMaintenanceReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgType != other.MsgType) return false;
      if (PosReqId != other.PosReqId) return false;
      if (PosTransType != other.PosTransType) return false;
      if (PosMaintAction != other.PosMaintAction) return false;
      if (Account != other.Account) return false;
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgType.Length != 0) hash ^= MsgType.GetHashCode();
      if (PosReqId.Length != 0) hash ^= PosReqId.GetHashCode();
      if (PosTransType.Length != 0) hash ^= PosTransType.GetHashCode();
      if (PosMaintAction.Length != 0) hash ^= PosMaintAction.GetHashCode();
      if (Account != 0UL) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Account);
      }
      if (MsgType.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(MsgType);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(Symbol);
      }
      if (PosTransType.Length != 0) {
        output.WriteRawTag(170, 44);
        output.WriteString(PosTransType);
      }
      if (PosReqId.Length != 0) {
        output.WriteRawTag(178, 44);
        output.WriteString(PosReqId);
      }
      if (PosMaintAction.Length != 0) {
        output.WriteRawTag(194, 44);
        output.WriteString(PosMaintAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MsgType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MsgType);
      }
      if (PosReqId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosReqId);
      }
      if (PosTransType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosTransType);
      }
      if (PosMaintAction.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PosMaintAction);
      }
      if (Account != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Account);
      }
      if (Symbol.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionMaintenanceReport other) {
      if (other == null) {
        return;
      }
      if (other.MsgType.Length != 0) {
        MsgType = other.MsgType;
      }
      if (other.PosReqId.Length != 0) {
        PosReqId = other.PosReqId;
      }
      if (other.PosTransType.Length != 0) {
        PosTransType = other.PosTransType;
      }
      if (other.PosMaintAction.Length != 0) {
        PosMaintAction = other.PosMaintAction;
      }
      if (other.Account != 0UL) {
        Account = other.Account;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Account = input.ReadUInt64();
            break;
          }
          case 282: {
            MsgType = input.ReadString();
            break;
          }
          case 442: {
            Symbol = input.ReadString();
            break;
          }
          case 5674: {
            PosTransType = input.ReadString();
            break;
          }
          case 5682: {
            PosReqId = input.ReadString();
            break;
          }
          case 5698: {
            PosMaintAction = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
